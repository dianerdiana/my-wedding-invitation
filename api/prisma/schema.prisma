// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  fullName       String           @db.VarChar(255)
  username       String           @unique @db.VarChar(100)
  password       String           @db.VarChar(255)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?
  lastLogin      DateTime?
  invitationText InvitationText[]
  userGuests     GuestList[]

  @@map("Users")
}

model Quote {
  id        Int      @id @default(autoincrement())
  quote     String
  author    String
  createdAt DateTime @default(now())

  @@map("Quotes")
}

model GuestList {
  id             Int      @id @default(autoincrement())
  name           String
  phone          String?
  invitationText String   @db.Text
  createdAt      DateTime @default(now())
  userId         Int
  guestUserId    User     @relation(fields: [userId], references: [id])

  @@map("GuestList")
}

model Reservation {
  id              Int      @id @default(autoincrement())
  name            String
  message         String   @db.Text
  attendaceStatus String
  createdAt       DateTime @default(now())

  @@map("Reservations")
}

model WeddingConfig {
  id               Int      @id @default(autoincrement())
  brideFullName    String
  brideShortName   String
  brideInitialName String
  brideMotherName  String
  brideFatherName  String
  groomFullName    String
  groomShortName   String
  groomInitialName String
  groomMotherName  String
  groomFatherName  String
  weddingDate      DateTime
  akadTime         String
  resepsiTime      String
  weddingAddress   String
  weddingMapLink   String
  createdAt        DateTime @default(now())

  @@map("WeddingConfig")
}

model GiftAccount {
  id            Int    @id @default(autoincrement())
  accountName   String
  accountNumber String
  accountLogo   String

  @@map("GiftAccounts")
}

model InvitationText {
  id        Int      @id @default(autoincrement())
  name      String
  text      String   @db.Text
  userId    Int
  createdBy User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@map("InvitationText")
}
